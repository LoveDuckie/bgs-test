name: "Build, Test, and Package: Python"

on:
  push:
    paths:
      - "**/*.py"
    branches:
      - main
  pull_request:
    paths:
      - "**"
  workflow_dispatch:
    inputs:
      bump_type:
        description: "Type of version bump (manual trigger)"
        required: true
        default: "patch"
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  install-dependencies:
    name: "Install Dependencies (Poetry Cache)"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install Poetry
        uses: ./.github/actions/install-poetry

      - name: Install Dependencies
        run: |
          poetry install

  lint:
    name: "Linting"
    needs: install-dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install Poetry
        uses: ./.github/actions/install-poetry

      - name: Lint
        run: ./run_lint.sh

  test:
    name: "Unit Tests"
    needs: install-dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install Poetry
        uses: ./.github/actions/install-poetry

      - name: Run Tests
        run: ./run_tests.sh

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v3
        with:
          name: bgs-tool-coverage-report
          path: ./htmlcov/

  bump-version:
    name: "Bump Version"
    needs: [lint, test]
    if: ${{ github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install Poetry
        uses: ./.github/actions/install-poetry

      - name: Conditional Version Bump and Commit
        run: |
          echo "Checking if workflow was triggered by dispatch..."
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "Bumping version..."
            poetry version ${{ github.event.inputs.bump_type }}
            git config --global user.name "GitHub Actions"
            git config --global user.email "actions@github.com"
            git add pyproject.toml
            git commit -m "Bump version: ${{ github.event.inputs.bump_type }}"
            git push origin ${{ github.ref_name }}
          else
            echo "Not a workflow_dispatch event. Skipping version bump."
          fi

  build:
    name: "Build Project"
    needs: [bump-version]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install Poetry
        uses: ./.github/actions/install-poetry

      - name: Build Package
        run: ./run_build.sh

      - name: Determine Version
        id: version
        run: |
          VERSION=$(poetry version -s)
          echo "version=$VERSION" >> $GITHUB_ENV

      - name: Compress Artifacts
        run: |
          tar -czvf bgs_tool-v${{ env.version }}.tar.gz -C ./dist .

      - name: Upload Package Artifact
        uses: actions/upload-artifact@v3
        with:
          name: bgs-tool-build
          path: ./bgs_tool-v${{ env.version }}.tar.gz

  create-release:
    name: "Create Release"
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Download Package Artifact
        uses: actions/download-artifact@v3
        with:
          name: bgs-tool-build # Matches the artifact name from the build job
          path: ./

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install Poetry
        uses: ./.github/actions/install-poetry

      - name: Determine Version
        id: version
        run: |
          VERSION=$(poetry version -s)
          echo "version=$VERSION" >> $GITHUB_ENV

      - name: Create Release
        uses: actions/create-release@v1
        id: create-release
        with:
          tag_name: v${{ env.version }}
          release_name: Release v${{ env.version }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ./bgs_tool-v${{ env.version }}.tar.gz
          asset_name: bgs_tool-v${{ env.version }}.tar.gz
          asset_content_type: application/gzip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
